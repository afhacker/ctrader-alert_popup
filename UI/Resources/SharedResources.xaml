<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:converters="clr-namespace:cAlgo.API.Alert.UI.Converters"
    xmlns:iconsPack="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks"
    xmlns:local="clr-namespace:cAlgo.API.Alert.UI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Cobalt.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:EnumToInt x:Key="EnumToInt" />
    <converters:EnumToDescription x:Key="EnumToDescription" />

    <Style
        x:Key="CustomizedAccentedSquareButtonStyle"
        BasedOn="{StaticResource AccentedSquareButtonStyle}"
        TargetType="Button">
        <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style
        x:Key="CustomizedSquareButtonStyle"
        BasedOn="{StaticResource SquareButtonStyle}"
        TargetType="Button">
        <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="BoldCenteredTextBlock" TargetType="TextBlock">
        <Setter Property="Margin" Value="3" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style
        x:Key="ReadOnlyDataGridStyle"
        BasedOn="{StaticResource MetroDataGrid}"
        TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="EnableRowVirtualization" Value="True" />
    </Style>

    <Style x:Key="RadiusCornerBorderStyle" TargetType="Border">
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <DataTemplate x:Key="AlertsHeaderTemplate">
        <StackPanel
            Margin="3"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button Command="{Binding Path=DataContext.RemoveSelectedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" ToolTip="Remove Selected">
                <iconsPack:PackIconMaterial Kind="Delete" />
            </Button>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="AlertsCellTemplate">
        <StackPanel
            Margin="3"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                Command="{Binding Path=DataContext.RemoveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                CommandParameter="{Binding}"
                ToolTip="Remove Selected">
                <iconsPack:PackIconMaterial Kind="Delete" />
            </Button>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="TwelveHourTimeTemplate">
        <Border Background="DimGray" Style="{StaticResource RadiusCornerBorderStyle}">
            <TextBlock Style="{StaticResource BoldCenteredTextBlock}" Text="{Binding Path=Time, StringFormat={}{0:MM/dd/yyyy hh:mm tt}}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="TwentyFourHourTimeTemplate">
        <Border Background="DimGray" Style="{StaticResource RadiusCornerBorderStyle}">
            <TextBlock Style="{StaticResource BoldCenteredTextBlock}" Text="{Binding Path=Time, StringFormat={}{0:MM/dd/yyyy HH:mm}}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="TimeTemplate">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.TimeFormat, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Converter={StaticResource EnumToInt}}" Value="0">
                            <Setter Property="ContentTemplate" Value="{StaticResource TwelveHourTimeTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=DataContext.TimeFormat, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Converter={StaticResource EnumToInt}}" Value="1">
                            <Setter Property="ContentTemplate" Value="{StaticResource TwentyFourHourTimeTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="SellSideTemplate">
        <Border Background="Red" Style="{StaticResource RadiusCornerBorderStyle}">
            <TextBlock Style="{StaticResource BoldCenteredTextBlock}" Text="{Binding Path=TradeSide}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="BuySideTemplate">
        <Border Background="Green" Style="{StaticResource RadiusCornerBorderStyle}">
            <TextBlock Style="{StaticResource BoldCenteredTextBlock}" Text="{Binding Path=TradeSide}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="TradeSideTemplate">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=TradeSide}" Value="Sell">
                            <Setter Property="ContentTemplate" Value="{StaticResource SellSideTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=TradeSide}" Value="Buy">
                            <Setter Property="ContentTemplate" Value="{StaticResource BuySideTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="SymbolTemplate">
        <Border Background="DarkGoldenrod" Style="{StaticResource RadiusCornerBorderStyle}">
            <TextBlock Style="{StaticResource BoldCenteredTextBlock}" Text="{Binding Path=Symbol}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="TimeFrameTemplate">
        <Border Background="DarkMagenta" Style="{StaticResource RadiusCornerBorderStyle}">
            <TextBlock Style="{StaticResource BoldCenteredTextBlock}" Text="{Binding Path=TimeFrame}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="TriggeredByTemplate">
        <Border Background="RosyBrown" Style="{StaticResource RadiusCornerBorderStyle}">
            <TextBlock Style="{StaticResource BoldCenteredTextBlock}" Text="{Binding Path=TriggeredBy}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="CommentTemplate">
        <FlowDocumentScrollViewer ScrollViewer.VerticalScrollBarVisibility="Hidden">
            <FlowDocument>
                <Paragraph>
                    <Run Text="{Binding Path=Comment}" />
                </Paragraph>
            </FlowDocument>
        </FlowDocumentScrollViewer>
    </DataTemplate>
    <Style x:Key="DataGridGroupHeaderStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander
                        Controls:ButtonHelper.PreserveTextCase="True"
                        Header="{Binding Name}"
                        IsExpanded="True">
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="GroupStylePanel">
        <DataGridRowsPresenter />
    </ItemsPanelTemplate>
</ResourceDictionary>